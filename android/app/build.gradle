apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

Project background_geolocation = project(':react-native-background-geolocation')
apply from: "${background_geolocation.projectDir}/app.gradle"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    // Folders & Variants configuration (default commented out)
    // ...
    // Bundling configuration (default commented out)
    // ...
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion
    namespace "com.clicksolverpartner"
    defaultConfig {
        applicationId "com.clicksolverpartner"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 115
        versionName "1.25"
    }
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            proguardFiles "${background_geolocation.projectDir}/proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    implementation("com.google.firebase:firebase-auth")
    implementation 'com.google.firebase:firebase-auth:20.3.0'
    // Exclude activity recognition modules from dependencies that add them automatically
    implementation("com.google.android.gms:play-services-location:21.0.1") {
         exclude group: "com.google.android.gms", module: "play-services-activity-recognition"
    }
    implementation("com.huawei.hms:location:6.9.0.300") {
         exclude group: "com.huawei.hms", module: "activity-recognition"
    }
    // If using react-native-background-geolocation that internally uses tslocationmanager-v21,
    // you may also exclude its activity-recognition if needed.
    // (If duplication issues occur, consider modifying the background geolocation module separately.)
    if (hermesEnabled.toBoolean()) {
         implementation("com.facebook.react:hermes-android")
    } else {
         implementation jscFlavor
    }
}

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)

// Explicitly declare the dependencies to ensure correct task order
tasks.whenTaskAdded { task ->
    if (task.name == 'generateDebugLintReportModel' || task.name == 'lintAnalyzeDebug') {
        task.dependsOn('copyReactNativeVectorIconFonts')
    }
}
